/*
 *	Library: parallel.js
 *	Author: Adam Savitzky
 *  License: Creative Commons 3.0
 */
var Parallel=function(){var e=function(){var e=function(e){return"self.onmessage = function (e) { self.postMessage(JSON.stringify(("+e.toString()+").apply(self, JSON.parse(e.data)))); }"};var t=function(t){var n=e(t),r=new Blob([n],{type:"text/javascript"}),i=URL.createObjectURL(r),s=new Worker(i);s.onmessage=this.onWorkerMsg;this.worker=s;this.worker.ref=this};t.prototype.onWorkerMsg=function(e){this.ref.data=JSON.parse(e.data)};t.prototype.data=undefined;t.prototype.fetch=function(e){return this.data?e?e(this.data):this.data:setTimeout(_.bind(this.fetch,this,e),0)&&undefined};t.prototype.terminate=function(){this.worker.terminate()};return function(e,n){var r=new t(e);r.worker.postMessage(JSON.stringify([].concat(n)));return r}}();var t=function(){var t=function(t,n,r){this.mapper=t;this.reducer=n;this.chunks=r;this.refs=_.map(r,function(n){return e(t,[].concat(n))})};t.prototype.fetch=function(e){var t=this.fetchRefs(),n=this;if(_.isEqual(t,_.without(t,undefined))){return e?e(_.reduce(t,this.reducer)):_.reduce(t,this.reducer)}setTimeout(function(){n.fetch(e)},100)};t.prototype.fetchRefs=function(e){return _.map(this.refs,function(t){return t.fetch(e||undefined)},this)};t.prototype.terminate=function(e){e!==undefined?this.refs[e].terminate():_.invoke(this.refs,"terminate")};return function(e,n,r,i){var s=new t(e,n,r);s.fetch(i);return s}}();return{mapreduce:t,spawn:e}}()